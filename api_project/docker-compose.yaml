version: '3.3'
services:
  proxy:
    image: traefik:v2.3
    ports:
      - 80:80
      - 8090:8080
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --accesslog
      - --log
      - --api
    labels:
      - traefik.enable=true
    restart: always

  asr_db:
    image: postgres:14
    ports:
      - 5432:5432
    volumes:
      - /mnt/postgres:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    networks:
      - db
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
  app:
    depends_on:
      - asr_db
    build:
      context: .
      dockerfile: asr_app.dockerfile
    env_file:
      - .env
    networks:
      - traefik-public
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=PathPrefix(`/asr_api`)
      - traefik.docker.network=traefik-public
      - traefik.http.services.app.loadbalancer.server.port=80
    restart: always

volumes:
  app-db-data:
  prometheus-data:
  grafana-data:
networks:
  traefik-public:
    external: true
  db:
    external: false
